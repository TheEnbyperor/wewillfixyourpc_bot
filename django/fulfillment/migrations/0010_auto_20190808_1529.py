# Generated by Django 2.2.1 on 2019-08-08 15:29

from django.db import migrations, models
import django.db.models.deletion


def create_brands(apps, schema_editor):
    Brand = apps.get_model("fulfillment", "Brand")
    try:
        Brand.objects.get(name="ipad")
    except Brand.DoesNotExist:
        Brand(name="ipad", display_name="iPad").save()
    try:
        Brand.objects.get(name="iphone")
    except Brand.DoesNotExist:
        Brand(name="iphone", display_name="iPhone").save()


def create_models(apps, objects, brand):
    Model = apps.get_model("fulfillment", "Model")
    RepairType = apps.get_model("fulfillment", "RepairType")
    Repair = apps.get_model("fulfillment", "Repair")
    for repair in objects:
        try:
            model = Model.objects.get(brand=brand, name=repair.name.lower())
        except Model.DoesNotExist:
            model = Model(
                brand=brand, name=repair.name.lower(), display_name=repair.name
            )
            model.save()
        try:
            repair_type = RepairType.objects.get(name=repair.repair_name.lower())
        except RepairType.DoesNotExist:
            repair_type = RepairType(
                name=repair.repair_name.lower(), display_name=repair.repair_name
            )
            repair_type.save()
        new_repair = Repair(
            price=repair.price,
            repair_time=repair.repair_time,
            device=model,
            repair=repair_type,
        )
        new_repair.save()


def create_ipad_models(apps, schema_editor):
    IPadRepar = apps.get_model("fulfillment", "IPadRepair")
    Brand = apps.get_model("fulfillment", "Brand")
    brand = Brand.objects.get(name="ipad")
    create_models(apps, IPadRepar.objects.all(), brand)


def create_iphone_models(apps, schema_editor):
    IPhoneRepar = apps.get_model("fulfillment", "IPhoneRepair")
    Brand = apps.get_model("fulfillment", "Brand")
    brand = Brand.objects.get(name="iphone")
    create_models(apps, IPhoneRepar.objects.all(), brand)


class Migration(migrations.Migration):

    dependencies = [("fulfillment", "0009_auto_20190803_0828")]

    operations = [
        migrations.CreateModel(
            name="Model",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("display_name", models.CharField(max_length=255)),
                (
                    "brand",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="fulfillment.Brand",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RepairType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("display_name", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="Repair",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("repair_time", models.CharField(max_length=255)),
                (
                    "device",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="fulfillment.Model",
                    ),
                ),
                (
                    "repair",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="fulfillment.RepairType",
                    ),
                ),
            ],
        ),
        migrations.RunPython(create_brands),
        migrations.RunPython(create_ipad_models),
        migrations.RunPython(create_iphone_models),
        migrations.DeleteModel(name="IPadRepair"),
        migrations.DeleteModel(name="IPhoneRepair"),
        migrations.AlterField(
            model_name="phoneunlock",
            name="device",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="fulfillment.Model",
            ),
        ),
    ]
