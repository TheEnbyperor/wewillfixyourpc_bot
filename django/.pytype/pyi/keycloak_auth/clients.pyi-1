# (generated with --quick)

from typing import Any, Tuple, TypeVar

_admin_client: Any
_authz_client: Any
_oidc_client: Any
_realm_client: Any
_uma_client: Any
datetime: module
django: module
keycloak: module
models: Any
typing: module

_T0 = TypeVar('_T0')

class TokensExpired(Exception): ...

def _update_or_create(token_response, initiate_time) -> Any: ...
def get_access_token() -> Any: ...
def get_active_access_token(oidc_profile) -> Any: ...
def get_authz_client() -> Any: ...
def get_entitlement(oidc_profile) -> Any: ...
def get_keycloak_admin_client() -> Any: ...
def get_keycloak_client() -> Any: ...
def get_new_access_token() -> Tuple[Any, Any]: ...
def get_openid_connect_client() -> Any: ...
def get_service_account_profile() -> Any: ...
def get_uma_client() -> Any: ...
def update_or_create_user_and_oidc_profile(id_token_object) -> Any: ...
def update_tokens(token_model: _T0, token_response, initiate_time) -> _T0: ...
